version: 2.1

orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.8.2
  snyk: snyk/snyk@1.5.0

jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          echo "Installing dependencies..."
          npm install 
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests
          command: npm test
  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: sughrahassan/tamkeen-software
          tag: v1.0.2
      - docker/push:
          image: sughrahassan/tamkeen-software
          tag: v1.0.2
  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Render push
          command: |
            curl "https://api.render.com/deploy/srv-d25h2o3uibrs73akib7g?key=6AYWJOOgSZg"
  scan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: sughrahassan/tamkeen-software
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME .
      - snyk/scan:
          docker-image-name: $IMAGE_NAME
          severity-threshold: high
          fail-on-issues: false
  codescan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: sughrahassan/tamkeen-software
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME .
      - snyk/install
      - run: |
          snyk code test



workflows:
  version: 2
  simple_workflow:
    jobs:
      # === CI Pipeline (main branch only) ===
      - build:
          filters:
            branches:
              only: main
      - test:
          requires:
            - build
          filters:
            branches:
              only: main
      - publish:
          requires:
            - test
          filters:
            branches:
              only: main

      # === Full CICD Pipeline (release branch only) ===
      - build:
          name: build-release
          filters:
            branches:
              only: release
      - test:
          name: test-release
          requires:
            - build-release
          filters:
            branches:
              only: release
      - publish:
          name: publish-release
          requires:
            - test-release
          filters:
            branches:
              only: release
      - deploy:
          requires:
            - test-release
          filters:
            branches:
              only: release

      # === Code scanning (both main & release) ===
      - codescan:
          filters:
            branches:
              only:
                - main
                - release




# workflows:
#   simple_workflow:
#     jobs:
#       - build:
#           filters:
#             branches:
#               only: 
#                 - main
#                 - release
#       - test:
#           requires:
#             - build
#           filters:
#             branches:
#               only: 
#                 - main
#                 - release

#       - publish:
#           requires:
#             - test
#           filters:
#             branches:
#               only: 
#                 - main
#                 - release
  

#       - deploy:
#           requires:
#             - test
#           filters:
#             branches:
#               only: release

#       - codescan:
#           requires:
#             - build
#           filters:
#             branches:
#               only: 
#                 - main
#                 - release


